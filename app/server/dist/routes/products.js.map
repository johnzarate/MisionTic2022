{"version":3,"sources":["../../src/routes/products.js"],"names":["router","route","get","req","res","dbConnection","collection","find","toArray","err","result","forEach","element","console","log","_id","error","send","msg","post","body","newProduct","name","price","yu","db","add","patch","client","connect","updateOne","idProduct","id","$set","unitPrice","status","reds","close","delete","params","resd","doc","mgs","rd"],"mappings":"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","sourcesContent":["import { Router } from \"express\";\nimport { MongoClient } from \"mongodb\";\n\nconst router = Router();\n\nrouter.route(\"/\").get(async (req, res) => {\n  //if there is going wrong try/catch handle it\n  try {\n    await dbConnection.collection(\"users\")\n      .find({})\n      .toArray((err, result) => {\n        if (err) throw err;\n        result.forEach((element) => { \n          console.log(element._id);\n        });\n      });\n  } catch (error) {\n    console.log(\"Error get request in products\", error);\n  } finally {\n  }\n\n  res.send({ msg: \"Get request successfully\" });\n});\n\nrouter.post(\"/create-product\", async (req, res) => {\n  console.log(req.body);\n  const newProduct = {\n    name: req.body.name,\n    price: req.body.price,\n  };\n  const yu = await db.collection(\"sales\").add(newProduct);\n  console.log(yu);\n  res.send({ name: \"Hola Mundo\" });\n});\n\nrouter.patch(\"/update-product\", (req, res) => {\n  client.connect((err) => {\n    const collection = client.db(\"thunder-db\").collection(\"users\");\n    // perform actions on the collection object\n    console.log(req.body);\n    collection.updateOne(\n      { idProduct: req.body.id },\n      { $set: { unitPrice: req.body.price, status: req.body.status } },\n      function (err, reds) {\n        if (err) throw err;\n        console.log(\"1 document updated\", reds);\n        client.close();\n      }\n    );\n  });\n\n  client.close();\n\n  res.send({ msg: \"Updated\" });\n});\n\nrouter.delete(\"/delete/:id\", async (req, res) => {\n  console.log(req.params.id);\n  const resd = await db.collection(\"sales\").doc(req.params.id).delete();\n  res.send({ mgs: \"Deleted\", rd: resd });\n});\n\nexport default router;\n"],"file":"products.js"}